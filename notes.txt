Talk notes:

  * Talk title
  * work at thoughtbot
  * scared
    * keep your pitchforks until talk stops, then flame me
  * I'm scared right now - dangerous to talk about peoples' fav languages
  * Story about why no haskell - other talk is about boring deployment stuff so you're probably stuck here
  * Starting with coffeescript because it's similar to Ruby
    * you can see how these things could be brought to the language
  * Things coffescript does better:
    * list comprehensions
    * whitespace sensitivity
      * show ruby without ends
    * is/isn't/in
    * ?. for soaking up nulls
      * like #try, maybe bad?
    * chained comparisons healthy = 200 > cholesterol > 60
  * Things clojure does better:
    * anaphora
    * functions in a lisp~1
    * macros / homoiconicity
      * metaprogramming is easier - give macro example that you can't do in ruby
    * namespaces
    * destructuring
      * proposal to add in JS: http://wiki.ecmascript.org/doku.php?id=proposals:destructuring_assignment
    * stupid stuff
      * commas as whitespace
      * dashes instead of underscores
      * syntax sugar as described here: http://briancarper.net/blog/536/
    
  * MagicFS
    * At first I couldn't see ruby's flaws
      * designed in early 90s for HP handhelds
      * 26 variables a-z
      * method names are NUMBERS
      * all system functions are two-letters, case-sensitive
      * we wrote HOSPITAL SOFTARE in this stuff



=======================

Prep:
  * usual 
  * disable notes


Maybe:
  To Read:
  * Why functional programming matters
  * Little Schemer
